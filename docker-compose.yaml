version: "3.7"
services:

version: "3.7"
services:


  ##############
  ## Services ##
  ##############

  crawler:
    image: dgoldstein1/crawler:1.3.1
    depends_on:
      - kv
      - graph
    restart: always
    environment:
      - GRAPH_DB_ENDPOINT=http://graph:5000
      - TWO_WAY_KV_ENDPOINT=http://kv:5001
      - MAX_APPROX_NODES=-1
      - COMMAND=ar
      - METRICS_PORT=8001
      - PARALLELISM=2
      - MS_DELAY=250

  c2:
    image: dgoldstein1/crawler:1.3.1
    depends_on:
      - kv
      - graph
    restart: always
    environment:
      - GRAPH_DB_ENDPOINT=http://graph:5000
      - TWO_WAY_KV_ENDPOINT=http://kv:5001
      - MAX_APPROX_NODES=-1
      - COMMAND=ar
      - METRICS_PORT=8001
      - PARALLELISM=1
      - MS_DELAY=250

  # c3:
  #   image: dgoldstein1/crawler:1.3.1
  #   depends_on:
  #     - kv
  #     - graph
  #   restart: always
  #   environment:
  #     - GRAPH_DB_ENDPOINT=http://graph:5000
  #     - TWO_WAY_KV_ENDPOINT=http://kv:5001
  #     - MAX_APPROX_NODES=-1
  #     - COMMAND=ar
  #     - METRICS_PORT=8001
  #     - PARALLELISM=2
  #     - MS_DELAY=250

  links:
    image: dgoldstein1/links:1.3.2
    labels:
      kompose.service.type: loadbalancer
      kompose.service.expose: "true"
    ports:
      - 3002:3000
    environment:
      # configure reverse-proxy
      - services=biggraph,twowaykv,geoip,wikipedia,analytics,grafana,prometheus,links
      ###################
      ## core services ##
      ###################
      - links_incoming_path=/
      - links_outgoing_url=file:///static-files
      - biggraph_incoming_path=/services/biggraph/
      - biggraph_outgoing_url=http://graph:5000
      - twowaykv_incoming_path=/services/twowaykv/
      - twowaykv_outgoing_url=http://kv:5001
      - wikipedia_incoming_path=/services/wiki/
      - wikipedia_outgoing_url=https://ar.wikipedia.org
      ###############
      ## analytics ##
      ###############
      - geoip_incoming_path=/analytics/api/geoIpServer/
      - geoip_outgoing_url=https://geo.ipify.org/api/
      - analytics_incoming_path=/analytics/server/
      - analytics_outgoing_url=http://analytics-server:5000
      ###########
      ## admin ##
      ###########
      - grafana_incoming_path=/admin/grafana/
      - grafana_outgoing_url=http://grafana:3000
      - prometheus_incoming_path=/admin/prometheus/
      - prometheus_outgoing_url=http://prom:9090
    depends_on:
      - kv
      - graph

  kv:
    image: dgoldstein1/twowaykv:1.0.1
    ports:
      - 5001:5001
    depends_on:
      - prom

    environment:
      - USE_S3=true
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY
      - AWS_ACCESS_KEY_ID
      - AWS_SYNC_DIRECTORY=s3://links-deployment/synonymsAR/twowaykv
      - GRAPH_DB_STORE_DIR=/db/twowaykv
      - SAVE_INTERVAL=120

  graph:
    # image: dgoldstein1/biggraph:1.1.0
    image: dgoldstein1/biggraph:latest
    ports:
      - 5000:5000
      - 8001:8001
    depends_on:
      - prom
    environment:
      - GRAPH_SAVE_INTERVAL=60
      - AWS_ACCESS_KEY_ID
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_SYNC_DIRECTORY=s3://links-deployment/synonymsAR/biggraph
      - AWS_SECRET_ACCESS_KEY
      - GRAPH_SAVE_PATH=/data/counties.graph
      - USE_S3=true

  ################
  ## Monitoring ##
  ################

  prom:
    image: dgoldstein1/crawler-deployment:prometheus
    ports:
      - 9090:9090
    entrypoint: "/bin/prometheus --web.external-url http://localhost:8443/admin/prometheus/ --web.route-prefix=/ --log.level=debug --config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: dgoldstein1/crawler-deployment:grafana
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/
    labels:
      kompose.service.type: loadbalancer
      kompose.service.expose: "true"
    depends_on:
      - prom
    ports:
    - "3001:3000"
    # environment:
    #   - GF_SERVER_SERVE_FROM_SUB_PATH=true
    #   - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:/admin/grafana

 ###############
 ## Analytics ##
 ###############

  analytics-server:
    image : dgoldstein1/websiteanalytics-backend
    environment:
      - LOGGER=true
      - TEST_MODE=false
      - DATABASE_URL=mongodb://mongodb:27017
      - PORT=5000
    links:
      - mongodb
    depends_on:
      - mongodb
    ports:
      - 5002:5000


  analytics-ui:
    image: dgoldstein1/websiteanalytics-frontend:0.1.0
    environment:
      - PORT=3000
      - services=ui,backend
      - backend_incoming_path=/api/metrics/
      - backend_outgoing_url=http://analytics-server:5000
      - ui_incoming_path=/
      - ui_outgoing_url=file:///static-files
    ports:
      - 3003:3000

  mongodb:
    image: 'mongo:4.0.5'
